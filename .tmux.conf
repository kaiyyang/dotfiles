############################################################
#
# GENERAL
#
############################################################
# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

set -g set-clipboard on
set -g set-clipboard external
set -g set-clipboard off
# Start numbering at 1
set -g base-index 1
# Allows for faster key repetition
set -s escape-time 0
# Set mouse mode on
set -g mouse on
# Increase scrollback buffer size from 2000 to 100000 nd xlines
set -g history-limit 100000
# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000
# Focus events enabled for terminals that support them
set -g focus-events on
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
## enable activity alerts
setw -g monitor-activity off
set -g visual-activity off
############################################################
#
# KEY BINDINGS
#
############################################################

# Use C-a instead of C-b as prefix key
unbind-key C-b

set -g prefix C-a
bind a   send-prefix
# Easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

unbind r
bind r source-file ~/.tmux.conf \; display "Reload!"

unbind K
bind K run "tmux kill-pane -a"

unbind x
bind x respawn-pane -k
# clear the current pane
#bind -n C-k send-keys -R \; send-keys C-l \;
# Clear history like iterm/terminal
bind -n C-x send-keys C-l \; run 'tmux clear-history' \; run 'rm -rf tmux-history*' \;

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

#maximizing and restoring panes.
bind -n M-m resize-pane -Z \;

# navigate between window
bind -n M-1     select-window -t 1
bind -n M-2     select-window -t 2
bind -n M-3     select-window -t 3
bind -n M-4     select-window -t 4
bind -n M-5     select-window -t 5
bind -n M-6     select-window -t 6
bind -n M-7     select-window -t 7
bind -n M-8     select-window -t 8
bind -n M-9     select-window -t 9
bind -n M-0     select-window -t 10
bind -n M->     select-window -n
bind -n M-<     select-window -p


############################################################
#
# CUSTOMIZE STATUS BAR
#
############################################################

set -g status on
set -g status-interval 1
set -g status-justify centre
set -g status-keys vi
set -g status-position top # [top, bottom]
# Set the status line's colors
set -g status-style fg=white,bold,bg=black
# Set the color of the window list
set -g window-status-style fg=default,bg=default
set -g window-status-format '#I:#W '

# Set colors for the active window
set -g window-status-current-style fg=green,bg=default
set -g window-status-current-format '#I:#W '

# Customize command line(default)
set -g message-style fg=black,bg=yellow

# Left status
set -g status-left-length 100
set -g status-left-style default
set -g status-left "#[fg=green] #S #[fg=yellow] #I #[fg=cyan] #P"
set -g status-left "#[fg=green] ❐ #S #[default]"

# Right status
# set -g status-left-length 20
set -g status-right-length 60
set -g status-right-style default

# Status line right side -  DD-MMM HH:MM
set -g status-right "#[fg=cyan] %d %b %R"
# r Display the os version (OSX
# set -ag status-right "#[fg=black]#[fg=green,bright] #(sw_vers -productVersion) #[default]"
set -ag status-right "#[fg=green,bg=default]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load -q -v)#[default]"
# Display battery percentage
set -ag status-right "#[fg=green,bg=default,bright]  󰂄 #(pmset -g batt | tail -1 | awk '{print $3}' | tr -d ';') #[default]"
############################################################
#
# CUSTOMIZE ACTIVE PANE
#
############################################################

# Colors for pane borders(default)
# setw -g pane-border-style fg=green,bg=default
# setw -g pane-active-border-style fg=white,bg=default
# 
# # Active pane normal, other shaded out
# setw -g window-style fg=colour240,bg=default
# setw -g window-active-style fg=white,bg=default

############################################################
#
# VI MODE
#
############################################################
# enable vi keys.
set-window-option -g mode-keys vi
# escape turns on copy mode
# bind Escape copy-mode
# v in copy mode starts making selection
# make Prefix p paste the buffer.
# unbind p
# bind p paste-buffer


# macOS only for copy and paste in tmux
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
############################################################
#
# MISC
#
############################################################


# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# List of plugins
# set -g @plugin 'rose-pine/tmux'
# set -g @rose_pine_variant 'moon' # Options are 'main', 'moon' or 'dawn'
# # ... alongside
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-copycat'

set -g @plugin 'thewtex/tmux-mem-cpu-load'

set -g @plugin 'NHDaly/tmux-better-mouse-mode'

set -g @yank_selection 'primary'
set -g @yank_selection_mouse 'clipboard'
set -g @yank_action 'copy-pipe'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @plugin 'tmux-plugins/tmux-logging'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# # To update plugin for future revisions or bug fixes, do the "Prefix + U" keycombo
# 
# # Other examples:
# # set -g @plugin 'github_username/plugin_name'
# # set -g @plugin 'github_username/plugin_name#branch'
# # set -g @plugin 'git@github.com:user/plugin'
# # set -g @plugin 'git@bitbucket.com:user/plugin'
# 
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
